@model Project.Models.BirthRecordVM
@{
    ViewBag.Title = "Edit";
}
<link href="~/css/jquery.datetimepicker.css" rel="stylesheet" />
<div class="panel">
    <div class="panel-body">
        <div class="tab">
            <button class="tablinks" id="childTab" onclick="openSection(event, 'child')"><h4>Newborn</h4><h6>Newborn information</h6></button>
            <button class="tablinks" id="motherTab" onclick="openSection(event, 'mother1')"><h4>Mother</h4><h6>Demographics</h6></button>
            <button class="tablinks" id="fatherTab" onclick="openSection(event, 'father')"><h4>Father</h4><h6>Demographics</h6></button>
            <button class="tablinks" id="certifierTab" onclick="openSection(event, 'certifer')"><h4>Certifier</h4><h6> </h6></button>
            <button class="tablinks" id="mother2Tab" onclick="openSection(event, 'mother2')"><h4>Mother</h4><h6>Other information</h6></button>
            <button class="tablinks" id="mother3Tab" onclick="openSection(event, 'mother3')"><h4>Mother</h4><h6>Education/Ethnicity</h6></button>
            <button class="tablinks" id="father2Tab" onclick="openSection(event, 'father2')"><h4>Father</h4><h6>Education/Ethnicity</h6></button>
            <button class="tablinks" id="mother4Tab" onclick="openSection(event, 'mother4')"><h4>Mother</h4><h6>Pregnancy information</h6></button>
            <button class="tablinks" id="medicalTab" onclick="openSection(event, 'medical')"><h4>Medical and Health Information</h4><h6>Mother's Information</h6></button>
            <button class="tablinks" id="newbornTab" onclick="openSection(event, 'newborn')"><h4>Newborn</h4><h6>Birth Information</h6></button>
        </div>
        @using (Html.BeginForm("Edit", "birthRecords", FormMethod.Post))
        {
            @Html.AntiForgeryToken()


        <div class="form-horizontal">
            <input type="hidden" asp-for="PatientID" />
            <input type="hidden" asp-for="MedicalRecordNumber" />
            <input type="hidden" asp-for="BabyPersonID" />
            <div id="child" class="tabcontent">
                <br />
                <div class="form-group">
                    <label class="col-md-12">Child's Name</label>
                    <div class="col-md-3">
                        @Html.TextBox("ChildFirstName", null, new { @class = "form-control", placeholder = "First" })
                    </div>
                    <div class="col-md-3">
                        @Html.TextBox("ChildMiddleName", null, new { @class = "form-control", placeholder = "Middle" })
                    </div>
                    <div class="col-md-3">
                        @Html.TextBox("ChildLastName", null, new { @class = "form-control", placeholder = "Last" })
                    </div>
                    <div class="col-md-3">
                        @Html.TextBox("ChildSuffix", null, new { @class = "form-control", placeholder = "Suffix" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="datetimepicker1">Date of Birth (Mo/Day/Yr)</label>
                    <div class="col-md-12 input-group date">
                        <input type="text" id="datetimepicker1" class="form-control" asp-for="ChildDOB">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-12" for="genderList">Gender</label>
                    <div class="col-md-12">
                        <select class="form-control" asp-for="ChildGender">
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Unknown">Unknown</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="facilityName">Facility Name</label>
                    <div class="col-md-12">
                        @Html.TextBox("facilityName", null, new { @class = "form-control", title = "If not institution, give street and number" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="childBirthLocation">City, Town, or Location of Birth</label>
                    <div class="col-md-12">
                        @Html.TextBox("childBirthLocation", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="childBirthCounty">County of Birth</label>
                    <div class="col-md-12">
                        @Html.TextBox("childBirthCounty", null, new { @class = "form-control" })
                    </div>
                </div>
                <br />
                <input type="button" class="btn btn-primary col-md-12" id="button1" value="Next">
            </div>
            <div id="mother1" class="tabcontent">
                <br />
                <div class="form-group">
                    <label class="col-md-12">Mother's Name</label>
                    <div class="col-md-3">
                        <input type="text" asp-for="FirstName" class="form-control" placeholder="First" />
                    </div>
                    <div class="col-md-3">
                        <input type="text" asp-for="MiddleName" class="form-control" placeholder="Middle" />
                    </div>
                    <div class="col-md-3">
                        <input type="text" asp-for="LastName" class="form-control" placeholder="Last" />
                    </div>
                    <div class="col-md-3">
                        <input type="text" asp-for="Suffix" class="form-control" placeholder="Suffix" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="BirthDate">Date of Birth (Mo/Day/Yr)</label>
                    <div class="col-md-12 input-group date">
                        <input asp-for="BirthDate" type="date" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Mother's Birth Name (Maiden Name)</label>
                    <div class="col-md-3">
                        <input type="text" asp-for="PriorFirstName" class="form-control" placeholder="First" />
                    </div>
                    <div class="col-md-3">
                        <input type="text" asp-for="PriorMiddleName" class="form-control" placeholder="Middle" />
                    </div>
                    <div class="col-md-3">
                        <input type="text" asp-for="PriorLastName" class="form-control" placeholder="Last" />
                    </div>
                    <div class="col-md-3">
                        <input type="text" asp-for="PriorSuffix" class="form-control" placeholder="Suffix" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="motherBirthplace">Birthplace (State, Territory, or Foreign Country)</label>
                    <div class="col-md-12">
                        @Html.TextBox("Birthplace", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="state">Residence of Mother - State</label>
                    <div class="col-md-12">
                        <select id="state" class="form-control" name="state">
                            <option value="AL">AL</option>
                            <option value="AK">AK</option>
                            <option value="AZ">AZ</option>
                            <option value="AR">AR</option>
                            <option value="CA">CA</option>
                            <option value="CO">CO</option>
                            <option value="CT">CT</option>
                            <option value="DE">DE</option>
                            <option value="FL">FL</option>
                            <option value="GA">GA</option>
                            <option value="HI">HI</option>
                            <option value="ID">ID</option>
                            <option value="IL">IL</option>
                            <option value="IN">IN</option>
                            <option value="IA">IA</option>
                            <option value="KS">KS</option>
                            <option value="KY">KY</option>
                            <option value="LA">LA</option>
                            <option value="ME">ME</option>
                            <option value="MD">MD</option>
                            <option value="MA">MA</option>
                            <option value="MI">MI</option>
                            <option value="MN">MN</option>
                            <option value="MS">MS</option>
                            <option value="MO">MO</option>
                            <option value="MT">MT</option>
                            <option value="NE">NE</option>
                            <option value="NV">NV</option>
                            <option value="NH">NH</option>
                            <option value="NJ">NJ</option>
                            <option value="NM">NM</option>
                            <option value="NY">NY</option>
                            <option value="NC">NC</option>
                            <option value="ND">ND</option>
                            <option value="OH">OH</option>
                            <option value="OK">OK</option>
                            <option value="OR">OR</option>
                            <option value="PA">PA</option>
                            <option value="RI">RI</option>
                            <option value="SC">SC</option>
                            <option value="SD">SD</option>
                            <option value="TN">TN</option>
                            <option value="TX">TX</option>
                            <option value="UT">UT</option>
                            <option value="VT">VT</option>
                            <option value="VA">VA</option>
                            <option value="WA">WA</option>
                            <option value="WV">WV</option>
                            <option value="WI">WI</option>
                            <option value="WY">WY</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="motherCounty">County</label>
                    <div class="col-md-12">
                        @Html.TextBox("motherCountry", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="motherCity">City, Town, or Location</label>
                    <div class="col-md-12">
                        @Html.TextBox("ResidentCity", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="motherAddress">Street and Number</label>
                    <div class="col-md-12">
                        @Html.TextBox("ResidentStreetAddress", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="motherAptNo">Apt. No.</label>
                    <div class="col-md-12">
                        @Html.TextBox("ResidentAptNo", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="motherZip">Zip Code</label>
                    <div class="col-md-12">
                        @Html.TextBox("ResidenceZip", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("InCity")
                    </div>
                    @Html.Label("InCity", "Is this address inside of the city limits?", htmlAttributes: new { @class = "checkbox-custom-label" })
                </div>
                <br />
                <input type="button" class="btn btn-primary col-md-12" id="button2" value="Next">
            </div>
            <div id="father" class="tabcontent">
                <br />
                @*<a href="#" name="hasFather" id="hasFather">hasFather? </a>*@
                <div class="form-group">
                    <label class="col-md-12">Father's Name</label>
                    @*Hidden field to capture father Person Id*@
                    <div class="hidden">
                        @Html.TextBox("FatherPersonID", null, new { @class = "form-control" })
                    </div>
                    <div class="col-md-3">
                        @Html.TextBox("FatherFirstName", null, new { @class = "form-control", placeholder = "First Name" })
                    </div>
                    <div class="col-md-3">
                        @Html.TextBox("FatherMiddleName", null, new { @class = "form-control", placeholder = "Middle Name" })
                    </div>
                    <div class="col-md-3">
                        @Html.TextBox("FatherLastName", null, new { @class = "form-control", placeholder = "Last Name" })
                    </div>
                    <div class="col-md-3">
                        @Html.TextBox("FatherSuffix", null, new { @class = "form-control", placeholder = "Suffix" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Date of Birth (Mo/Day/Yr)</label>
                    <div class="col-md-12">
                        <input asp-for="FatherDOB" type="date" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Birthplace (State, Territory, or Foreign Country)</label>
                    <div class="col-md-12">
                        @Html.TextBox("FatherBirthPlace", null, new { @class = "form-control" })
                    </div>
                </div>
                <input type="button" class="btn btn-primary col-md-12" id="button3" onclick="openSection(event, 'certifer')" value="Next">
            </div>
            <div id="certifer" class="tabcontent">
                <br />
                <div class="form-group">
                    <label class="col-md-12">Certifier's Name</label>
                    <div class="col-md-12">
                        @Html.TextBox("certifierName", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Title</label>
                    <div class="col-md-12">
                        <select id="certifierTitleList" class="form-control" name="certifierTitleList">
                            <option value="MD">MD</option>
                            <option value="DO">DO</option>
                            <option value="Hospital Admin.">Hospital Admin.</option>
                            <option value="CNM/CM">CNM/CM</option>
                            <option value="Other Midwife">Other Midwife</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
                <div class="form-group" id="certifierTitleOtherDiv" hidden="hidden">
                    <label class="col-md-12">(Specify)</label>
                    <div class="col-md-12">
                        @Html.TextBox("certifierTitleOther", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="dateCertified">Date Certified</label>
                    <div class="col-md-12">
                        <input type="date" class="form-control" name="dateCertified" value="">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="datedFiled">Date Filed By Registrar</label>
                    <div class="col-md-12">
                        <input type="date" class="form-control" name="datedFiled" value="">
                    </div>
                </div>
                <input type="button" class="btn btn-primary col-md-12" id="button4" value="Next">
            </div>
            <div id="mother2" class="tabcontent">
                <br />
                <div class="form-group">
                    <label for="sameAsHome" class="col-md-12">Mailing address same as home?</label>
                    <div class="col-md-12">
                        <select id="sameAsHome" name="sameAsHome" class="form-control">
                            <option value="N">No</option>
                            <option value="Y">Yes</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("mailingStateList", "State", htmlAttributes: new { @class = "col-md-12" })
                    <div class="col-md-12">
                        <select id="stateList" name="stateList" class="form-control">
                            <option value="AL">AL</option>
                            <option value="AK">AK</option>
                            <option value="AZ">AZ</option>
                            <option value="AR">AR</option>
                            <option value="CA">CA</option>
                            <option value="CO">CO</option>
                            <option value="CT">CT</option>
                            <option value="DE">DE</option>
                            <option value="FL">FL</option>
                            <option value="GA">GA</option>
                            <option value="HI">HI</option>
                            <option value="ID">ID</option>
                            <option value="IL">IL</option>
                            <option value="IN">IN</option>
                            <option value="IA">IA</option>
                            <option value="KS">KS</option>
                            <option value="KY">KY</option>
                            <option value="LA">LA</option>
                            <option value="ME">ME</option>
                            <option value="MD">MD</option>
                            <option value="MA">MA</option>
                            <option value="MI">MI</option>
                            <option value="MN">MN</option>
                            <option value="MS">MS</option>
                            <option value="MO">MO</option>
                            <option value="MT">MT</option>
                            <option value="NE">NE</option>
                            <option value="NV">NV</option>
                            <option value="NH">NH</option>
                            <option value="NJ">NJ</option>
                            <option value="NM">NM</option>
                            <option value="NY">NY</option>
                            <option value="NC">NC</option>
                            <option value="ND">ND</option>
                            <option value="OH">OH</option>
                            <option value="OK">OK</option>
                            <option value="OR">OR</option>
                            <option value="PA">PA</option>
                            <option value="RI">RI</option>
                            <option value="SC">SC</option>
                            <option value="SD">SD</option>
                            <option value="TN">TN</option>
                            <option value="TX">TX</option>
                            <option value="UT">UT</option>
                            <option value="VT">VT</option>
                            <option value="VA">VA</option>
                            <option value="WA">WA</option>
                            <option value="WV">WV</option>
                            <option value="WI">WI</option>
                            <option value="WY">WY</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">City, Town, or Location</label>
                    <div class="col-md-12">
                        @Html.TextBox("motherMailingCity", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Street and Number</label>
                    <div class="col-md-12">
                        @Html.TextBox("motherMailingAddress", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Apt. No.</label>
                    <div class="col-md-12">
                        @Html.TextBox("motherMailingAptNo", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Zip Code</label>
                    <div class="col-md-12">
                        @Html.TextBox("motherMailingZip", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("isMarried")
                    </div>
                    @Html.Label("isMarried", "Mother Married?", htmlAttributes: new { @class = "control -label col-md-10", Style = "text-align:left", title = "At birth, conception, or any time between" })
                </div>
                <div class="form-group" id="paternityAckDiv">
                    <div class="col-md-offset-2 col-md-1">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.PaternityAck)
                            @Html.ValidationMessageFor(model => model.PaternityAck, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.LabelFor(model => model.PaternityAck, "If no, has paternity acknowledgement been signed in the hospital?", htmlAttributes: new { @class = "control-label col-md-9", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.SsnRequested)
                            @Html.ValidationMessageFor(model => model.SsnRequested, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.LabelFor(model => model.SsnRequested, "Social security number requested for child?", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                @*<div class="form-group">
                <label class="col-md-12">Facility Id. (NPI)</label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.facilityId, new { htmlAttributes = new { @class = "form-control", @id = "facilityId", required = "required" } })
                    @Html.ValidationMessageFor(model => model.facilityId, "", new { @class = "text-danger" })
                </div>
            </div>*@
                <div class="form-group">
                    <label class="col-md-12" for="motherSSN">Mother’s Social Security Number</label>
                    <div class="col-md-12">
                        @Html.TextBox("motherSSN", null, new { @class = "form-control", @id = "motherSSN", title = "Enter SSN without dashes" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="fatherSSN">Father’s Social Security Number</label>
                    <div class="col-md-12">
                        @Html.TextBox("fatherSSN", null, new { @class = "form-control", title = "Enter SSN without dashes" })
                    </div>
                </div>
                <input type="button" class="btn btn-primary col-md-12" id="button5" value="Next">
            </div>
            <div id="mother3" class="tabcontent">
                <br />
                <h4>Mother's Education</h4>
                <div class="form-group">
                    <label class="col-md-12">(Check the box that best describes the highest degree or level of school completed at the time of delivery)</label>
                    <div class="col-md-12">
                        @Html.DropDownList("MotherEducationEarnedName", Model.MotherEduDropDown, new { @class = "form-control" })
                    </div>
                </div>
                <br />
                <h4>Mother of Hispanic Origin?</h4>
                <div class="form-group">
                    <label class="col-md-12">(Check the box that best describes whether the mother is Spanish/Hispanic/Latina. Check the “No” box if mother is not Spanish/Hispanic/Latina)</label>
                    <div class="col-md-12">
                        <select id="motherHispanic" class="form-control" name="motherHispanic">
                            <option value="No, not Spanish/Hispanic/Latina">No, not Spanish/Hispanic/Latina</option>
                            <option value="Yes, Mexican, Mexican American, Chicana">Yes, Mexican, Mexican American, Chicana</option>
                            <option value="Yes, Puerto Rican">Yes, Puerto Rican</option>
                            <option value="Yes, Cuban">Yes, Cuban</option>
                            <option value="Yes, other Spanish/Hispanic/Latina">Yes, other Spanish/Hispanic/Latina</option>
                        </select>
                    </div>
                </div>
                <div class="form-group" id="motherOtherHispanic" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("motherHispanicOther", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                <br />
                <h4>Mother's Race </h4>
                <div class="form-group">
                    <label class="col-md-12">(Check one or more races to indicate what the mother considers herself to be)</label>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherWhite")
                    </div>
                    @Html.Label("motherWhite", "White", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherBlack")
                    </div>
                    @Html.Label("motherBlack", "Black or African American", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherHasTribe")
                    </div>
                    @Html.Label("motherHasTribe", "American Indian or Alaska Native", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="motherTribeDiv" hidden="hidden">
                    <label class="col-md-12">(Name of the enrolled or principal tribe)</label>
                    <div class="col-md-12">
                        @Html.TextBox("motherTribe", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherAsianIndian")
                    </div>
                    @Html.Label("motherAsianIndian", "Asian Indian", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherChinese")
                    </div>
                    @Html.Label("motherChinese", "Chinese", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherFilipino")
                    </div>
                    @Html.Label("motherFilipino", "Filipino", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherJapanese")
                    </div>
                    @Html.Label("motherJapanese", "Japanese", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherKorean")
                    </div>
                    @Html.Label("motherKorean", "Korean", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherVietnamese")
                    </div>
                    @Html.Label("motherVietnamese", "Vietnamese", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherIsAsian")
                    </div>
                    @Html.Label("motherIsAsian", "Other Asian", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="motherAsianDiv" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("motherOtherAsian", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherHawaiian")
                    </div>
                    @Html.Label("motherHawaiian", "Hawaiian", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherGuamanian")
                    </div>
                    @Html.Label("motherGuamanian", "Guamanian", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherSamoan")
                    </div>
                    @Html.Label("motherSamoan", "Samoan", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherIsIslander")
                    </div>
                    @Html.Label("motherIsIslander", "Other Pacific Islander", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="motherIslanderDiv" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("motherOtherIslander", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("motherIsOther")
                    </div>
                    @Html.Label("motherIsOther", "Other", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="motherOtherDiv" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("motherOtherRace", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                <input type="button" class="btn btn-primary col-md-12" id="button6" value="Next">
            </div>
            <div id="father2" class="tabcontent">
                <br />
                <h4>Father's Education</h4>
                <div class="form-group">
                    <label class="col-md-12">(Check the box that best describes the highest degree or level of school completed at the time of delivery)</label>
                    <div class="col-md-12">
                        @Html.DropDownList("FatherEducationEarnedName", Model.FatherEduDropDown, new { @class = "form-control" })
                        @*<select id="fatherEducation" class="form-control" name="fatherEducation">
            <option value="8th grade or less">8th grade or less</option>
            <option value="9th - 12th grade, no diploma">9th - 12th grade, no diploma</option>
            <option value="9th - 12th grade, no diploma">9th - 12th grade, no diploma</option>
            <option value="High school graduate or GED completed">High school graduate or GED completed</option>
            <option value="Some college credit but no degree">Some college credit but no degree</option>
            <option value="Associate degree (e.g., AA, AS)">Associate degree (e.g., AA, AS)</option>
            <option value="Bachelor’s degree (e.g., BA, AB, BS)">Bachelor’s degree (e.g., BA, AB, BS)</option>
            <option value="Master’s degree (e.g., MA, MS, MEng, MEd, MSW, MBA)">Master’s degree (e.g., MA, MS, MEng, MEd, MSW, MBA)</option>
            <option value="Doctorate (e.g., PhD, EdD) or Professional degree (e.g., MD, DDS, DVM, LLB, JD)">Doctorate (e.g., PhD, EdD) or Professional degree (e.g., MD, DDS, DVM, LLB, JD)</option>
        </select>*@
                    </div>
                </div>
                <br />
                <h4>Father of Hispanic Origin?</h4>
                <div class="form-group">
                    <label class="col-md-12">(Check the box that best describes whether the mother is Spanish/Hispanic/Latina. Check the “No” box if mother is not Spanish/Hispanic/Latina)</label>
                    <div class="col-md-12">
                        <select id="fatherHispanic" class="form-control" name="fatherHispanic">
                            <option value="No, not Spanish/Hispanic/Latina">No, not Spanish/Hispanic/Latina</option>
                            <option value="Yes, Mexican, Mexican American, Chicana">Yes, Mexican, Mexican American, Chicana</option>
                            <option value="Yes, Puerto Rican">Yes, Puerto Rican</option>
                            <option value="Yes, Cuban">Yes, Cuban</option>
                            <option value="Yes, other Spanish/Hispanic/Latina">Yes, other Spanish/Hispanic/Latina</option>
                        </select>
                    </div>
                </div>
                <div class="form-group" id="fatherOtherHispanic" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("fatherHispanicOther", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                <br />
                <h4>Father's Race </h4>
                <div class="form-group">
                    <label class="col-md-12">(Check one or more races to indicate what the father considers herself to be)</label>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherWhite")
                    </div>
                    @Html.Label("fatherWhite", "White", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherBlack")
                    </div>
                    @Html.Label("fatherBlack", "Black or African American", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherHasTribe")
                    </div>
                    @Html.Label("fatherHasTribe", "American Indian or Alaska Native", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="fatherTribeDiv" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("fatherTribe", null, new { @class = "form-control", title = "Name of the enrolled or principal tribe" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherAsianIndian")
                    </div>
                    @Html.Label("fatherAsianIndian", "Asian Indian", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherChinese")
                    </div>
                    @Html.Label("fatherChinese", "Chinese", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherFilipino")
                    </div>
                    @Html.Label("fatherFilipino", "Filipino", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherJapanese")
                    </div>
                    @Html.Label("fatherJapanese", "Japanese", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherKorean")
                    </div>
                    @Html.Label("fatherKorean", "Korean", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherVietnamese")
                    </div>
                    @Html.Label("fatherVietnamese", "Vietnamese", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherIsAsian")
                    </div>
                    @Html.Label("fatherIsAsian", "Other Asian", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="fatherAsianDiv" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("fatherOtherAsian", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherHawaiian")
                    </div>
                    @Html.Label("fatherHawaiian", "Hawaiian", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherGuamanian")
                    </div>
                    @Html.Label("fatherGuamanian", "Guamanian", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherSamoan")
                    </div>
                    @Html.Label("fatherSamoan", "Samoan", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherIsIslander")
                    </div>
                    @Html.Label("fatherIsIslander", "Other Pacific Islander", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="fatherIslanderDiv" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("fatherOtherIslander", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("fatherIsOther")
                    </div>
                    @Html.Label("fatherIsOther", "Other", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="fatherOtherDiv" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("fatherOtherRace", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                <br />
                <h4>Place Where Birth Occured (Check one)</h4>
                <div class="form-group">
                    <div class="col-md-12">
                        <select id="birthOccuredPlace" class="form-control" name="birthOccuredPlace">
                            <option value="Hospital">Hospital</option>
                            <option value="Freestanding birthing center">Freestanding birthing center</option>
                            <option value="Home Birth">Home Birth</option>
                            <option value="Clinic/Doctor’s office">Clinic/Doctor’s office</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
                <div class="form-group" id="plannedAtHome" hidden="hidden">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.WasHomeBirth)
                        @Html.ValidationMessageFor(model => model.WasHomeBirth, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.WasHomeBirth, "Planned to deliver at home?", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="birthPlaceDiv" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("birthOccuredPlaceOther", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                @*<div class="form-group">
                <label class="col-md-12">Attendant Name</label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.AttendantName, new { htmlAttributes = new { @class = "form-control", @id = "attendantName", required = "required" } })
                    @Html.ValidationMessageFor(model => model.attendantName, "", new { @class = "text-danger" })
                </div>
            </div>*@
                <div class="form-group">
                    <label class="col-md-12">Attendant NPI</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.NPI, new { htmlAttributes = new { @class = "form-control", @id = "attendantNpi" } })
                        @Html.ValidationMessageFor(model => model.NPI, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="certifierTitleList">Attendant Title</label>
                    <div class="col-md-12">
                        <select id="attendantTitleList" class="form-control" name="attendantTitleList">
                            <option value="MD">MD</option>
                            <option value="DO">DO</option>
                            <option value="Hospital Admin.">Hospital Admin.</option>
                            <option value="CNM/CM">CNM/CM</option>
                            <option value="Other Midwife">Other Midwife</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
                <div class="form-group" id="attendantOther" hidden="hidden">
                    <div class="col-md-12">
                        @Html.TextBox("attendantNPIOther", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                @*<div class="form-group">
                <div class="col-md-offset-1 col-md-1">
                    @Html.EditorFor(model => model.MotherTransferred, new { htmlAttributes = new { @id = "motherTransferred" } })
                    @Html.ValidationMessageFor(model => model.motherTransferred, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.motherTransferred, "Mother Transferred For Maternal Medical Or Fetal Indications For Delivery?", htmlAttributes: new { @class = "col-md-10" })
            </div>
            <div class="form-group" id="motherTransferredDiv" hidden="hidden">
                <label class="col-md-12">If Yes, Enter Name Of Facility Mother Transferred From:</label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.transferFacility, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.transferFacility, "", new { @class = "text-danger" })
                </div>
            </div>*@
                <input type="button" class="btn btn-primary col-md-12" id="button7" value="Next">
            </div>
            <div id="mother4" class="tabcontent">
                <br />
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.CheckBox("noPrenatal", new { htmlAttributes = new { @id = "noPrenatal" } })
                    </div>
                    @Html.Label("noPrenatal", "No Prenatal Care", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="firstPrenatal">
                    <label class="col-md-12" for="firstPrenatal">Date of First Prenatal Care Visit (Mo/Day/Yr)</label>
                    <div class="col-md-12">
                        <input type="date" class="form-control" asp-for="FirstPrenatal">
                    </div>
                </div>
                <div class="form-group" id="lastPrenatal">
                    <label class="col-md-12" for="LastPrenatal">Date of Last Prenatal Care Visit (Mo/Day/Yr)</label>
                    <div class="col-md-12">
                        <input type="date" class="form-control" asp-for="LastPreNatal">
                    </div>
                </div>
                <div class="form-group" id="totalPrenatalDiv">
                    <label class="col-md-12">Total Number of Prenatal Visits for this Pregnancy</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.TotalPrenatal, new { htmlAttributes = new { @class = "form-control", @id = "totalPrenatal" } })
                        @Html.ValidationMessageFor(model => model.TotalPrenatal, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Mother's Height (inches)</label>
                    <div class="col-md-12">
                        @Html.TextBox("motherHeight", null, new { @class = "form-control", @id = "motherHeight" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Mother's Prepregnancy Weight (pounds)</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.MotherPreWeight, new { htmlAttributes = new { @class = "form-control", @id = "motherPreWeight" } })
                        @Html.ValidationMessageFor(model => model.MotherPreWeight, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Mother's Weight at Delivery (pounds)</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.MotherDeliveryWeight, new { htmlAttributes = new { @class = "form-control", @id = "motherDeliveryWeight" } })
                        @Html.ValidationMessageFor(model => model.MotherDeliveryWeight, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.HadWic)
                        @Html.ValidationMessageFor(model => model.HadWic, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.HadWic, "Did Mother Get Wic Food For Herself During This Pregnancy?", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <label class="col-md-12">Number Of Previous Live Births Still Living</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.PreviousBirthLiving, new { htmlAttributes = new { @class = "form-control", @id = "previousBirthLiving", title = "Do not include this child.", } })
                        @Html.ValidationMessageFor(model => model.PreviousBirthLiving, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                <label class="col-md-12">Number Of Previous Live Births Now Dead</label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.previousBirthDead, new { htmlAttributes = new { @class = "form-control", @id = "previousBirthDead", title = "Do not include this child.", required = "required" } })
                    @Html.ValidationMessageFor(model => model.previousBirthDead, "", new { @class = "text-danger" })
                </div>
            </div>*@
                <div class="form-group">
                    <label class="col-md-12" for="lastLiveBirth">Date of Last Live Birth (Mo/Day/Yr)</label>
                    <div class="col-md-12">
                        <input type="date" class="form-control" id="lastLiveBirth" asp-for="LastLiveBirth">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Number Of Other Pregnancy Outcomes</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.OtherBirthOutcome, new { htmlAttributes = new { @class = "form-control", @id = "otherBirthOutcomes", title = "Spontaneous Or Induced Losses Or Ectopic Pregnancies" } })
                        @Html.ValidationMessageFor(model => model.OtherBirthOutcome, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="lastOtherOutcome">Date of Last Pregnancy With Other Outcome (Mo/Day/Yr)</label>
                    <div class="col-md-12">
                        <input type="date" class="form-control" id="lastOtherOutcome" asp-for="LastOtherOutcome">
                    </div>
                </div>
                <br /><br />
                <h4>Cigarette smoking before and during pregnancy for each time period, enter either the average number of cigarettes or the average number of packs of cigarettes smoked. If none, enter A0".</h4>
                <br />
                <div class="form-group">
                    <label class="col-md-2 col-md-offset-4"># Cigarettes</label>
                    <label class="col-md-2"># Packs</label>
                </div>
                <div class="form-group">
                    <label class="col-md-4 text-right">Three Months Before Pregnancy</label>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.CigThreeMonthsBeforePregnancy, new { htmlAttributes = new { @class = "form-control", @id = "cigThreeBefore" } })
                        @Html.ValidationMessageFor(model => model.CigThreeMonthsBeforePregnancy, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="col-md-2">
                    @Html.EditorFor(model => model.packThreeBefore, new { htmlAttributes = new { @class = "form-control", @id = "packThreeBefore", required = "required" } })
                    @Html.ValidationMessageFor(model => model.packThreeBefore, "", new { @class = "text-danger" })
                </div>*@
                </div>
                <div class="form-group">
                    <label class="col-md-4 text-right">First Three Months of Pregnancy</label>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.CigFirstThreeMonthsPregnacy, new { htmlAttributes = new { @class = "form-control", @id = "cigFirstThree" } })
                        @Html.ValidationMessageFor(model => model.CigFirstThreeMonthsPregnacy, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="col-md-2">
                    @Html.EditorFor(model => model.packFirstThree, new { htmlAttributes = new { @class = "form-control", @id = "packFirstThree", required = "required" } })
                    @Html.ValidationMessageFor(model => model.packFirstThree, "", new { @class = "text-danger" })
                </div>*@
                </div>
                <div class="form-group">
                    <label class="col-md-4 text-right">Second Three Months of Pregnancy</label>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.CigSecondThreeMonthsPregnancy, new { htmlAttributes = new { @class = "form-control", @id = "cigSecondThree" } })
                        @Html.ValidationMessageFor(model => model.CigSecondThreeMonthsPregnancy, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="col-md-2">
                    @Html.EditorFor(model => model.packSecondThree, new { htmlAttributes = new { @class = "form-control", @id = "packSecondThree", required = "required" } })
                    @Html.ValidationMessageFor(model => model.packSecondThree, "", new { @class = "text-danger" })
                </div>*@
                </div>
                <div class="form-group">
                    <label class="col-md-4 text-right">Third Trimester of Pregnancy</label>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.CigThridTrimesterPregnancy, new { htmlAttributes = new { @class = "form-control", @id = "cigThirdTri" } })
                        @Html.ValidationMessageFor(model => model.CigThridTrimesterPregnancy, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="col-md-2">
                    @Html.EditorFor(model => model.packThirdTri, new { htmlAttributes = new { @class = "form-control", @id = "packThirdTri", required = "required" } })
                    @Html.ValidationMessageFor(model => model.packThirdTri, "", new { @class = "text-danger" })
                </div>*@
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="paymentList">Principal Source Of Payment For This Delivery</label>
                    <div class="col-md-12">
                        <select id="paymentList" class="form-control" name="paymentList">
                            <option value="Private Insurance">Private Insurance</option>
                            <option value="Medicaid">Medicaid</option>
                            <option value="Self-pay">Self-pay</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
                <div class="form-group" id="paymentOtherDiv" hidden="hidden">
                    <label class="col-md-12">(Specify)</label>
                    <div class="col-md-12">
                        @Html.TextBox("paymentOther", null, new { @class = "form-control", title = "Please Specify" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12" for="dateLastMenses">Date Last Normal Menses Began (Mo/Day/Yr)</label>
                    <div class="col-md-12">
                        <input type="date" class="form-control" name="dateLastMenses" value="0001-01-01">
                    </div>
                </div>
                <input type="button" class="btn btn-primary col-md-12" id="button8" value="Next">
            </div>
            <div id="medical" class="tabcontent">
                <br />
                <h4>Risk Factors in this Pregnancy</h4>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.DiabetesPrePregnancy)
                        @Html.ValidationMessageFor(model => model.DiabetesPrePregnancy, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.DiabetesPrePregnancy, "Diabetes - Prepregnancy (Diagnosis prior to this pregnancy)", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.DiabetesGestational)
                        @Html.ValidationMessageFor(model => model.DiabetesGestational, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.DiabetesGestational, "Diabetes - Gestational (Diagnosis in this pregnancy)", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.HypertensionPrePregnancy)
                        @Html.ValidationMessageFor(model => model.HypertensionPrePregnancy, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.HypertensionPrePregnancy, "Hypertension - Prepregnancy (Chronic)", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.HypertensionGestational)
                        @Html.ValidationMessageFor(model => model.HypertensionGestational, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.HypertensionGestational, "Hypertension - Gestational (PIH, preeclampsia)", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.HypertensionEclampsia)
                        @Html.ValidationMessageFor(model => model.HypertensionEclampsia, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.HypertensionEclampsia, "Hypertension - Eclampsia", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.PreviousPreTermBirth)
                        @Html.ValidationMessageFor(model => model.PreviousPreTermBirth, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PreviousPreTermBirth, "Previous preterm birth", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.PreviousPoorBirthOutcome)
                        @Html.ValidationMessageFor(model => model.PreviousPoorBirthOutcome, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PreviousPoorBirthOutcome, "Other previous poor pregnancy outcome (Includes preinatal death small-for-gestational age/intrauterine growth restricted birth)", htmlAttributes: new { @class = "col-md-10" })
                </div>
                @*<div class="form-group">
                <div class="col-md-offset-1 col-md-1">
                    @Html.EditorFor(model => model.ResultInfertility)
                    @Html.ValidationMessageFor(model => model.resultInfertility, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.resultInfertility, "Pregnancy resulted from infertility treatment-If yes, check all that apply:", htmlAttributes: new { @class = "col-md-10"})
            </div>*@
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-1">
                        @Html.EditorFor(model => model.FertilityDrugUsed)
                        @Html.ValidationMessageFor(model => model.FertilityDrugUsed, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.FertilityDrugUsed, "Fertility-enhancing drugs, Artificial insemination or Intrauterine insemination", htmlAttributes: new { @class = "col-md-9" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-1">
                        @Html.EditorFor(model => model.AssistedTechUsed)
                        @Html.ValidationMessageFor(model => model.AssistedTechUsed, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.AssistedTechUsed, "Assisted reproductive technology (e.g., in vitro fertilization(IVF), gamete intrafallopian transfer(GIFT))", htmlAttributes: new { @class = "col-md-9" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.PreviousCesarean, new { htmlAttributes = new { @id = "previousCesarean" } })
                        @Html.ValidationMessageFor(model => model.PreviousCesarean, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PreviousCesarean, "Mother had a previous cesarean delivery", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="cesareanAmount" hidden="hidden">
                    <label>If yes, how many</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.PreviousCesareanAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PreviousCesareanAmount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <br />
                <h4>Infections Present and/or Treated During This Pregnancy</h4>
                <label>(Check all that apply)</label>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Gonorrhea)
                        @Html.ValidationMessageFor(model => model.Gonorrhea, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Gonorrhea, "Gonorrhea", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Syphilis)
                        @Html.ValidationMessageFor(model => model.Syphilis, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Syphilis, "Syphilis", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Chlamydia)
                        @Html.ValidationMessageFor(model => model.Chlamydia, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Chlamydia, "Chlamydia", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.HepB)
                        @Html.ValidationMessageFor(model => model.HepB, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.HepB, "Hepatitis B", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.HepC)
                        @Html.ValidationMessageFor(model => model.HepC, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.HepC, "Hepatitis C", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <br />
                <br />
                <h4>Obstetric Procedures</h4>
                <label>(Check all that apply)</label>
                <br />
                @*<div class="form-group">
                <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.cervicalCerclage)
                        @Html.ValidationMessageFor(model => model.cervicalCerclage, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.cervicalCerclage, "Cervical cerclage", htmlAttributes: new { @class = "col-md-10" })
            </div>*@
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Tocolysis)
                        @Html.ValidationMessageFor(model => model.Tocolysis, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Tocolysis, "Tocolysis", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.ExternalCephalic)
                        @Html.ValidationMessageFor(model => model.ExternalCephalic, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.ExternalCephalic, "External cephalic version successful?", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <br />
                <br />
                <h4>Onset of Labor</h4>
                <label>(Check all that apply)</label>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.PreRuptureMembrane)
                        @Html.ValidationMessageFor(model => model.PreRuptureMembrane, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PreRuptureMembrane, "Premature Rupture of the Membranes (prolonged, >12 hrs.)", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.PrecipitousLabor)
                        @Html.ValidationMessageFor(model => model.PrecipitousLabor, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PrecipitousLabor, "Precipitous Labor (<3 hrs.)", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.ProlongedLabor)
                        @Html.ValidationMessageFor(model => model.ProlongedLabor, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.ProlongedLabor, "Prolonged Labor (>20 hrs.)", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <br />
                <br />
                <h4>Characteristics of labor and delivery</h4>
                <label>(Check all that apply)</label>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.InductionLabor)
                        @Html.ValidationMessageFor(model => model.InductionLabor, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.InductionLabor, "Induction of labor", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.AugmentationLabor)
                        @Html.ValidationMessageFor(model => model.AugmentationLabor, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.AugmentationLabor, "Augmentation of labor", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.NonVertex)
                        @Html.ValidationMessageFor(model => model.NonVertex, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.NonVertex, "Non-vertex presentation", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Steroids)
                        @Html.ValidationMessageFor(model => model.Steroids, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Steroids, "Steroids (glucocorticoids) for fetal lung maturation received by the mother prior to delivery", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Antibotics)
                        @Html.ValidationMessageFor(model => model.Antibotics, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Antibotics, "Antibiotics received by the mother during labor", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Chorioamnionitis)
                        @Html.ValidationMessageFor(model => model.Chorioamnionitis, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Chorioamnionitis, "Clinical chorioamnionitis diagnosed during labor or maternal temperature > 38°C(100.4°F)", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.MeconiumStaining)
                        @Html.ValidationMessageFor(model => model.MeconiumStaining, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.MeconiumStaining, "Moderate/heavy meconium staining of the amniotic fluid", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.FetalIntolerance)
                        @Html.ValidationMessageFor(model => model.FetalIntolerance, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.FetalIntolerance, "Fetal intolerance of labor such that one or more of the following actions was taken: in-utero resuscitative measures, further fetal assessment, or operative delivery", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Epidural)
                        @Html.ValidationMessageFor(model => model.Epidural, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Epidural, "Epidural or spinal anesthesia during labor", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <br />
                <br />
                <h4>Method of Delivery</h4>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.UnsuccessfulForceps)
                        @Html.ValidationMessageFor(model => model.UnsuccessfulForceps, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.UnsuccessfulForceps, "Was delivery with forceps attempted but unsuccessful?", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.UnsuccessfulVacuum)
                        @Html.ValidationMessageFor(model => model.UnsuccessfulVacuum, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.UnsuccessfulVacuum, "Was delivery with vacuum extraction attempted but unsuccessful?", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <label>Fetal presentation at birth</label>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.PresentationAtBirthCephalic)
                        @Html.ValidationMessageFor(model => model.PresentationAtBirthCephalic, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PresentationAtBirthCephalic, "Cephalic", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.PresentationAtBirthBreach)
                        @Html.ValidationMessageFor(model => model.PresentationAtBirthBreach, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PresentationAtBirthBreach, "Breech", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.OtherFetalPresentation)
                        @Html.ValidationMessageFor(model => model.OtherFetalPresentation, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.OtherFetalPresentation, "Other", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <label>Final route and method of delivery (Check one)</label>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.RouteSpontaneous)
                        @Html.ValidationMessageFor(model => model.RouteSpontaneous, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.RouteSpontaneous, "Vaginal/Spontaneous", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.RouteForcepts)
                        @Html.ValidationMessageFor(model => model.RouteForcepts, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.RouteForcepts, "Vaginal/Forceps", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.RouteVacuum)
                        @Html.ValidationMessageFor(model => model.RouteVacuum, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.RouteVacuum, "Vaginal/Vacuum", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Cesarean, new { htmlAttributes = new { @id = "TrialOfLabor" } })
                        @Html.ValidationMessageFor(model => model.Cesarean, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Cesarean, "Cesarean", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group" id="ifTrialOfLabor" hidden="hidden">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.FinalTrialOfLabor)
                        @Html.ValidationMessageFor(model => model.FinalTrialOfLabor, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.FinalTrialOfLabor, "If cesarean, was a trial of labor attempted?", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <br />
                <br />
                <h4>Maternal morbidity (Check all that apply) (Complications associated with labor and delivery)</h4>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.MaternalTransfusion)
                        @Html.ValidationMessageFor(model => model.MaternalTransfusion, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.MaternalTransfusion, "Maternal transfusion", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.PerinealLaceration)
                        @Html.ValidationMessageFor(model => model.PerinealLaceration, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PerinealLaceration, "Third or fourth degree perineal laceration", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.RupturedUterus)
                        @Html.ValidationMessageFor(model => model.RupturedUterus, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.RupturedUterus, "Ruptured uterus", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.UnplannedHysterectomy)
                        @Html.ValidationMessageFor(model => model.UnplannedHysterectomy, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.UnplannedHysterectomy, "Unplanned hysterectomy", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.AdmitToICU)
                        @Html.ValidationMessageFor(model => model.AdmitToICU, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.AdmitToICU, "Admission to intensive care unit", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.UnplannedOperationPostDelivery)
                        @Html.ValidationMessageFor(model => model.UnplannedOperationPostDelivery, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.UnplannedOperationPostDelivery, "Unplanned operating room procedure following delivery", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <br>
                <br>
                <input type="button" class="btn btn-primary col-md-12" id="button9" value="Next">
            </div>
            <div id="newborn" class="tabcontent">
                <br />
                <div class="form-group">
                    <label class="col-md-12">Birthweight</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.BirthWeight, new { htmlAttributes = new { @class = "form-control", @id = "birthWeight", title = "Please use grams." } })
                        @Html.ValidationMessageFor(model => model.BirthWeight, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Obstetric Estimate of Gestation (In Weeks)</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.EstimateGestation, new { htmlAttributes = new { @class = "form-control", @id = "estimateGestation" } })
                        @Html.ValidationMessageFor(model => model.EstimateGestation, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Agpar Score at 5 minutes</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.FiveMinApgarScore, new { htmlAttributes = new { @class = "form-control", @id = "fiveMinAgpar" } })
                        @Html.ValidationMessageFor(model => model.FiveMinApgarScore, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-12">Agpar Score at 10 minutes</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.TenMinApgarScore, new { htmlAttributes = new { @class = "form-control", @id = "tenMinAgpar" } })
                        @Html.ValidationMessageFor(model => model.TenMinApgarScore, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                <label class="col-md-12">Plurality - Single, Twin, Triple, etc</label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Plurality, new { htmlAttributes = new { @class = "form-control", @id = "plurality", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Plurality, "", new { @class = "text-danger" })
                </div>
            </div>*@
                <div class="form-group">
                    <label class="col-md-12">If not single birth - Born  First, Second, Third, etc (Specify)</label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.BirthOrder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BirthOrder, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <h4>Abnormal Conditions of the Newborn (Check all that apply)</h4>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.VenImmediate)
                        @Html.ValidationMessageFor(model => model.VenImmediate, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.VenImmediate, "Assisted ventilation required immediately following delivery", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.VentSixHours)
                        @Html.ValidationMessageFor(model => model.VentSixHours, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.VentSixHours, "Assisted ventilation required for more than six hours", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Nicu)
                        @Html.ValidationMessageFor(model => model.Nicu, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Nicu, "NICU admission", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Surfactant)
                        @Html.ValidationMessageFor(model => model.Surfactant, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Surfactant, "Newborn given surfactant replacement therapy", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.NeoNatalAntibotics)
                        @Html.ValidationMessageFor(model => model.NeoNatalAntibotics, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.NeoNatalAntibotics, "Antibiotics received by the newborn for suspected neonatal sepsis", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.SeizureDysfunction)
                        @Html.ValidationMessageFor(model => model.SeizureDysfunction, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.SeizureDysfunction, "Seizure or serious neurologic dysfunction", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.BirthInjury)
                        @Html.ValidationMessageFor(model => model.BirthInjury, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.BirthInjury, "Significant birth injury (skeletal fractures(s), peripheral nerve injury, and/or soft tissue/solid organ hemorrhage which requires intervention)", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <br />
                <h4>Congenital Anomalies of the Newborn</h4>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Anencephaly)
                        @Html.ValidationMessageFor(model => model.Anencephaly, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Anencephaly, "Anencephaly", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Meningomyelocele)
                        @Html.ValidationMessageFor(model => model.Meningomyelocele, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Meningomyelocele, "Meningomyelocele/Spina bifida", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Cyanotic)
                        @Html.ValidationMessageFor(model => model.Cyanotic, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Cyanotic, "Cyanotic congenital heart disease", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Cogenital)
                        @Html.ValidationMessageFor(model => model.Cogenital, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Cogenital, "Cogenital diaphragmatic hernia", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Omphalocele)
                        @Html.ValidationMessageFor(model => model.Omphalocele, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Omphalocele, "Omphalocele", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Gastroschisis)
                        @Html.ValidationMessageFor(model => model.Gastroschisis, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Gastroschisis, "Gastroschisis", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.LimbReduction)
                        @Html.ValidationMessageFor(model => model.LimbReduction, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.LimbReduction, "Limb reduction defect (excluding congenital amputation and dwarfing syndromes)", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.CleftLip)
                        @Html.ValidationMessageFor(model => model.CleftLip, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.CleftLip, "Cleft Lip with or without Cleft Palate", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.CleftPalate)
                        @Html.ValidationMessageFor(model => model.CleftPalate, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.CleftPalate, "Cleft Palate alone", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.DownSyndromePending)
                        @Html.ValidationMessageFor(model => model.DownSyndromePending, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.DownSyndromePending, "Down Syndrome", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-1">
                        @Html.EditorFor(model => model.DownSyndromeConfirmed)
                        @Html.ValidationMessageFor(model => model.DownSyndromeConfirmed, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.DownSyndromeConfirmed, "Karyotype confirmed", htmlAttributes: new { @class = "control-label col-md-9", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-1">
                        @Html.EditorFor(model => model.ChromosomalDisorderConfirmed)
                        @Html.ValidationMessageFor(model => model.ChromosomalDisorderConfirmed, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.ChromosomalDisorderConfirmed, "Karyotype confirmed", htmlAttributes: new { @class = "control-label col-md-9", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-1">
                        @Html.EditorFor(model => model.ChromosomalDisorderPending)
                        @Html.ValidationMessageFor(model => model.ChromosomalDisorderPending, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.ChromosomalDisorderPending, "Karyotype pending", htmlAttributes: new { @class = "control-label col-md-9", Style = "text-align:left" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-1">
                        @Html.EditorFor(model => model.Hypospadias)
                        @Html.ValidationMessageFor(model => model.Hypospadias, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Hypospadias, "Hypospadias", htmlAttributes: new { @class = "control-label col-md-10", Style = "text-align:left" })
                </div>
                <br /><br />
                @*<div class="form-group">
                <div class="col-md-1">
                        @Html.EditorFor(model => model.infantTransferred, new { htmlAttributes = new { @id = "infantTransferred" } })
                        @Html.ValidationMessageFor(model => model.infantTransferred, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.infantTransferred, "Was the infant transferred within 24 hours of delivery?", htmlAttributes: new { @class = "control-label col-md-11", Style = "text-align:left" })
            </div>
            <div class="form-group" id="infantTransferYes" hidden="hidden">
                @Html.LabelFor(model => model.infantTransferFacility, "If yes, name of facility infant transferred to", htmlAttributes: new { @class = "col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.infantTransferFacility, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InfantTransferFacility, "", new { @class = "text-danger" })
                </div>
            </div>*@
                <div class="form-group">
                    <label class="col-md-12" for="infantLiving">Is infant living at time of report?</label>
                    <div class="col-md-12">
                        <select id="infantLiving" class="form-control" name="infantLiving">
                            <option value="Yes">Yes</option>
                            <option value="No">No</option>
                            <option value="Infant transferred, status unknown">Infant transferred, status unknown</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-1">
                        @Html.EditorFor(model => model.BreastFed)
                        @Html.ValidationMessageFor(model => model.BreastFed, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.BreastFed, "Is the infant being breastfed at discharge?", htmlAttributes: new { @class = "col-md-10" })
                </div>
                <div class="form-group">
                    <input type="submit" value="Update" class="btn btn-primary col-md-12" />
                </div>
            </div>
        </div>
        }
    </div>
</div>
<script src="~/js/jquery-3.2.1.min.js"></script>
<script src="~/js/jquery.validate.js"></script>
<script src="~/js/jquery.are-you-sure.js"></script>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/jquery.datetimepicker.full.min.js"></script>
    <script>
        $('#datetimepicker1').datetimepicker({
            format: 'm/d/Y h:i:s A'
        });
    </script>
}
<script>
    $(document).ready(function () {

        //$('#birthForm').validate();
        $("#birthForm :input").tooltip({

            // place tooltip on the right edge
            position: "center right",

            // a little tweaking of the position
            offset: [-2, 10],

            // use the built-in fadeIn/fadeOut effect
            effect: "fade",

            // custom opacity setting
            opacity: 0.7

        });
        $('.tabcontent').css('display', 'none');
        openSection(null, 'child');

        $("#birthForm :input").each(function () {
            //Add question mark if it has a tooltip.
            console.log($(this).attr('data-original-title'));
            if ($(this).attr("data-original-title").length >= 1) {
                var label = $(this).closest('.form-group').find('label:eq(0)');
                if (label.children('.fa-question-circle').length == 0) {
                    label.append('&nbsp; <i class="fa fa-question-circle" aria-hidden="true"></i>');
                }
            }
        });

        //Make field red if required
        $(':button').click(function () {
            //var parent = (this).parentElement.id;
            //parent = '#' + parent;
            //var children = $(parent + ' :input');
            $(this).parent().find('input').each(function () {
                console.log($(this));
            });
        });

        //$('input').on('input', function () {
        //    if ($(this).prop('required') && $(this).val() != '') {
        //        $(this).css('border', 'none');
        //    }
        //});

        $.validator.addMethod("dashesValidate", function (value, element) {
            return this.optional(element) || /^[0-9\-\s]+$/i.test(value);
        }, "Must contain only numbers or dashes.");

        //$('#birthForm').areYouSure();

        $("#childTab").addClass("active");

        $("#button1").click(function () {
            openSection(null, 'mother1');
            $("#motherTab").addClass("active");
        });
        $("#button2").click(function () {
            openSection(null, 'father');
            $("#fatherTab").addClass("active");
        });
        $("#button3").click(function () {
            $("#certifierTab").addClass("active");
        });
        $("#button4").click(function () {
            openSection(null, 'mother2');
            $("#mother2Tab").addClass("active");
        });
        $("#button5").click(function () {
            openSection(null, 'mother3');
            $("#mother3Tab").addClass("active");
        });
        $("#button6").click(function () {
            openSection(null, 'father2');
            $("#father2Tab").addClass("active");
        });
        $("#button7").click(function () {
            openSection(null, 'mother4');
            $("#mother4Tab").addClass("active");
        });
        $("#button8").click(function () {
            openSection(null, 'medical');
            $("#medicalTab").addClass("active");
        });
        $("#button9").click(function () {
            openSection(null, 'newborn')
            $("#newbornTab").addClass("active");
        });
        //$("#hasFather").click(function () {
        //    $("#hasFather").addClass("hidden");
        //    $("#fatherFirstName").removeClass("hidden");
        //});
    });

    function openSection(evt, cityName) {
        // Declare all variables
        $(window).scrollTop(0);
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the link that opened the tab
        document.getElementById(cityName).style.display = "block";
        if (evt != null) {
            evt.currentTarget.className += " active";
        }

        $("#sameAsHome").change(function () {
            if ($(this).val() == "Y") {
                $("#stateList").val($("#state").val());
                $("#motherMailingCity").val($("#motherCity").val());
                $("#motherMailingAddress").val($("#motherAddress").val());
                $("#motherMailingAptNo").val($("#motherAptNo").val());
                $("#motherMailingZip").val($("#motherZip").val());
            }
            else {
                $("#stateList").val("AL");
                $("#motherMailingCity").val("");
                $("#motherMailingAddress").val("");
                $("#motherMailingAptNo").val("");
                $("#motherMailingZip").val("");
            }
        });


        $("#motherHispanic").change(function () {
            if ($(this).val() == "Yes, other Spanish/Hispanic/Latina") {
                $("#motherOtherHispanic").show();
            }
            else {
                $("#motherOtherHispanic").hide();
            }
        });

        $("#motherHasTribe").change(function () {
            if (this.checked) {
                $("#motherTribeDiv").show();
            }
            else {
                $("#motherTribeDiv").hide();
            }
        });

        $("#motherIsAsian").change(function () {
            if (this.checked) {
                $("#motherAsianDiv").show();
            }
            else {
                $("#motherAsianDiv").hide();
            }
        });

        $("#motherIsIslander").change(function () {
            if (this.checked) {
                $("#motherIslanderDiv").show();
            }
            else {
                $("#motherIslanderDiv").hide();
            }
        });

        $("#motherIsOther").change(function () {
            if (this.checked) {
                $("#motherOtherDiv").show();
            }
            else {
                $("#motherOtherDiv").hide();
            }
        });

        $("#fatherHispanic").change(function () {
            if ($(this).val() == "Yes, other Spanish/Hispanic/Latina") {
                $("#fatherOtherHispanic").show();
            }
            else {
                $("#fatherOtherHispanic").hide();
            }
        });

        $("#fatherHasTribe").change(function () {
            if (this.checked) {
                $("#fatherTribeDiv").show();
            }
            else {
                $("#fatherTribeDiv").hide();
            }
        });

        $("#fatherIsAsian").change(function () {
            if (this.checked) {
                $("#fatherAsianDiv").show();
            }
            else {
                $("#fatherAsianDiv").hide();
            }
        });

        $("#fatherIsIslander").change(function () {
            if (this.checked) {
                $("#fatherIslanderDiv").show();
            }
            else {
                $("#fatherIslanderDiv").hide();
            }
        });

        $("#fatherIsOther").change(function () {
            if (this.checked) {
                $("#fatherOtherDiv").show();
            }
            else {
                $("#fatherOtherDiv").hide();
            }
        });


        $("#certifierTitleList").change(function () {
            if ($(this).val() == "Other") {
                $("#certifierTitleOtherDiv").show();
            }
            else {
                $("#certifierTitleOtherDiv").hide();
            }
        });

        $("#attendantTitleList").change(function () {
            if ($(this).val() == "Other") {
                $("#attendantOther").show();
            }
            else {
                $("#attendantOther").hide();
            }
        });

        $("#birthOccuredPlace").change(function () {
            if ($(this).val() == "Home Birth") {
                $("#plannedAtHome").show();
                $("#birthPlaceDiv").hide();
            }
            else if ($(this).val() == "Other") {
                $("#plannedAtHome").hide();
                $("#birthPlaceDiv").show();
            }
            else {
                $("#plannedAtHome").hide();
                $("#birthPlaceDiv").hide();
            }
        });

        $("#isMarried").change(function () {
            if (this.checked) {
                $("#paternityAckDiv").hide();
            }
            else {
                $("#paternityAckDiv").show();
            }
        });

        $("#infantTransferred").change(function () {
            if (this.checked) {
                $("#infantTransferYes").show();
            }
            else {
                $("#infantTransferYes").hide();
            }
        });

        $("#motherTransferred").change(function () {
            if (this.checked) {
                $("#motherTransferredDiv").show();
            }
            else {
                $("#motherTransferredDiv").hide();
            }
        });

        $("#previousCesarean").change(function () {
            if (this.checked) {
                $("#cesareanAmount").show();
            }
            else {
                $("#cesareanAmount").hide();
            }
        });

        $("#TrialOfLabor").change(function () {
            if (this.checked) {
                $("#ifTrialOfLabor").show();
            }
            else {
                $("#ifTrialOfLabor").hide();
            }
        });


        $("#noPrenatal").change(function () {
            if (this.checked) {
                $("#firstPrenatal").hide();
                $("#lastPrenatal").hide();
                $("#totalPrenatalDiv").hide();
                $("#totalPrenatal").val("0");
            }
            else {
                $("#firstPrenatal").show();
                $("#lastPrenatal").show();
                $("#totalPrenatalDiv").show();
                $("#totalPrenatal").val("");
            }
        });

        $("#paymentList").change(function () {
            if ($(this).val() == "Other") {
                $("#paymentOtherDiv").show();
            }
            else {
                $("#paymentOtherDiv").hide();
            }
        });

        $("#motherSSN").keypress(function () {
            if ($(this).val().length == 3 || $(this).val().length == 6) {
                $(this).val($(this).val() + "-");
            }
        });
        $("#fatherSSN").keypress(function () {
            if ($(this).val().length == 3 || $(this).val().length == 6) {
                $(this).val($(this).val() + "-");
            }
        });

        $("#motherZip").keypress(function () {
            if ($(this).val().length == 5) {
                $(this).val($(this).val() + "-");
            }
        });

    };
</script>
